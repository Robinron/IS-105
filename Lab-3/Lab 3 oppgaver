Oppgave 1-2 er server og client filene.

Oppgave 3
Sammenhengen mellom den binære verdien til små bokstaver og den binære verdien til store bokstaver
er at de kun skilles med verdien til 1 enkelt bit. Biten som skiller bokstavene er den 6(altså den på 32'er plassen).

F.eks er "A" 01000001, mens "a" er 01100001.

Bokstavenes plassering og verdi i ascii-systemet er satt opp slik at en liten og 
en stor av samme bokstav endres kun ved å endre en enkelt bit, fremfor større 
deler av den binære koden. Grunnen til dette er at når systemet ble utviklet 
var datakapasiteteten begrenset, og dette skulle gjøre det enklest 
mulig å skille/endre mellom små og store bokstaver av samme type.

Oppgave 4
Applikasjonen fungerer og gir ikke feilmelding for tegn utover ASCII tegnsettet (f.eks. æøå), 
men serveren/tjeneren klarer ikke behandle lowercase til uppercase (.upper klarer ikke lese/finne kode for æøå).

Tegn som æ,ø og å er representert med to bytes som har 8 bits i lower case fremfor 1 byte med 7 bits som tegn i ASCII har. 
Disse tegnene representeres dog kun med 1 byte i uppercase, hvor sjette og sjuende bit flippes.

Om vi ser på hex-verdiene:
Lowercase æ E6, uppercase C6
Lowercase ø F8, uppercase D8
Lowercase å E5, uppercase C5

Upper har nøyaktig én verdi lavere enn lowercase, som de øvrige i ASCII tegnsettet.


oppgave 7
Først må vi se litt på forskjellen mellom UPD og TCP for å vite hvorfor vi  valgte den ene framfor den andre.

Med TCP så er man sikret at alle pakkene kommer fram og i riktig rekkefølger som man sender, skulle det ankomme i feil rekkefølge 
vil TCP reangere til det riktige. Dette fører også da til lavere hastighet, man kan si at sikkerhet og kvalitet går utover effektivitet. 
Pakkene som sendes er også større enn UDP, det blir da mer også mer trafikk for å sjekke om overføringen er riktige.

UDP har ikke faste ordre ettersom alle pakkene er uavhengige av hverandre. Grunnen til at UDP er raskere enn TCP er fordi det
er ikke noe feilsøking for pakker, det er heller ikke noe garanti for at pakkene kommer fram. Alle pakkene er sendt individuelt 
og kvaliteten bli først sjekket når de har ankommet. Passer ideelt hvis hastighet er viktigere enn kvalitet.

TCP protokoller passer for applikasjoner som krever stabile og sikker overføring der tiden spiller ikke så stor rolle. 
UDP er mer basert på rask og og effektiv overføringer, passer til applikasjoner som krever raske overføringer som feks 
online spill.

I denne laben har vi valgt å bruke UDP, grunnen er at mengden og størrelsene på pakkene som vi sender er såpass liten at det er 
liten fare for eventuelle feil, og i denne labben skulle vi også måle hastigheten når meldinger blir overført, så da var det mer hensiktsmessig
med en rask protokoll.

http://www.diffen.com/difference/TCP_vs_UDP


Oppgave 5-6 ikke gjort
